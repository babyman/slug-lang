var {*} = import(
	"slug.std"
)

@testWith(
	[{}, {}], true,
	[{k1:1}, {k1:1}], true,
	[{k1:1}, {}], false,
	[{k1:1}, {k2:2}], false
)
@export
var mapEquals = fn(m1, m2) {
	var check = fn(ks) {
		match ks {
			[] => true;
			[k, ...t] if m1[k] == m2[k] => check(t);
			_ => false
		}
	}
	var k1 = m1.keys();
	var k2 = m2.keys();
	if(len(k1) != len(k2)) {
		false
	} else {
		check(k1 + k2);
	}
}

@testWith(
	[{k1:1}, {k2:2}], {k1:1, k2:2},
	[{k1:1}, {}], {k1:1},
	[{}, {k2:2}], {k2:2},
	[{k1:1}, {k1:9}], {k1:1} // s1 keys are kept on duplicates
)
@export
var union = fn(s1, s2) {
	s1.keys().reduce(s2, fn(s, k) {
		s.put(k, s1[k])
	})
}
