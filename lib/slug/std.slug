//
// the slug standard library
// -------------------------

// return a string value indicating the type of `val`
foreign type = fn(val);

// get the length of a string, list or map
foreign len = fn(obj);

// print values
foreign print = fn(...args);

// print values followed by a newline
var println = fn(...args) {
    print(...args) + print("\n");
}

// get the list of keys used a map
foreign keys = fn(map);

// get a value from a map, nil if not present
foreign get = fn(map, key);

// put a value into a map
foreign put = fn(map, key, val);

// remove a key from a map
foreign remove = fn(map, key);

var map = fn(vs, f, acc = []) {
	match vs {
		[h, ...t] => map(t, f, acc :+ h.f());
		[] => acc;
	}
}

var filter = fn(vs, f, acc = []) {
	match vs {
		[h, ...t] if h.f() => filter(t, f, acc :+ h);
		[h, ...t] => filter(t, f, acc);
		[] => acc;
	}
}

var reduce = fn(vs, v, f) {
	match vs {
		[h, ...t] => reduce(t, f(v, h), f);
		[] => v;
	}
}


