// declaration
var list = ["slug", 42, fn(a) {a * a}];

// length
assertEqual(len(list), 3);

// lists are zero indexed
assertEqual(head(list), "slug");
assertEqual(list[0], "slug");
assertEqual(list[1], 42);

// reference the last item
assertEqual(list[2](5), 25);
assertEqual(list[len(list) - 1](5), 25);
assertEqual(peek(list)(5), 25);

// **mutation alert**
// pop removes and returns the last item in the list
assertEqual(pop(list)(5), 25);
assertEqual(len(list), 2);

// adding items
var l = [];
var l = push(l, 1, 2, 3);
var l = push(l, 4);
assertEqual(len(l), 4, "list should have 4 items");

// todo decide if list equality should be a memory reference compare
// assert(tail(list), tail(list), "lists are not equal");
