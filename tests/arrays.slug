import slug.test.*;

// empty list
// -----------------------
var e = [];

e.len().assertEqual(0);

// accessing elements by index
// -----------------------
var l = [2, 3, 4];

l[0].assertEqual(2);
l[1].assertEqual(3);
l[2].assertEqual(4);
l[3].assertEqual(nil);

l[-1].assertEqual(4);
l[-2].assertEqual(3);
l[-3].assertEqual(2);
l[-4].assertEqual(nil);

// list can contain mixed types
// -----------------------
var list = ["slug", 42, fn(a) {a * a}];

// length
// -----------------------
list.len().assertEqual(3);


// lists are zero indexed
// -----------------------
list.head().assertEqual("slug");
list[0].assertEqual("slug");
list[1].assertEqual(42);

// reference the last item
// -----------------------
list[2](5).assertEqual(25);
list[len(list) - 1](5).assertEqual(25);
list.peek()(5).assertEqual(25);

// **mutation alert**
// pop removes and returns the last item in the list
// -----------------------
list.pop()(5).assertEqual(25);
list.len().assertEqual(2);

// adding items
// -----------------------

var l = [];
var l = push(l, 1, 2, 3);
var l = push(l, 4);
assertEqual(len(l), 4, "list should have 4 items");

// todo decide if list equality should be a memory reference compare
// assert(tail(list), tail(list), "lists are not equal");

// concatenating lists
// -------------------
([1, 2] + [3, 4]).len().assertEqual(4);
([1, 2] + [3]).len().assertEqual(3);

// appending items
// ---------------
([1, 2] :+ 3).len().assertEqual(3);

// prepending items
// ----------------
(0 +: [1, 2]).len().assertEqual(3);


